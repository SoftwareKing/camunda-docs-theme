/**
 * prism.js default theme for JavaScript, CSS and HTML
 * Based on dabblet (http://dabblet.com)
 * @author Lea Verou
 */

code[class*="language-"],
pre[class*="language-"] {
  // color: black;
  // text-shadow: 0 1px white;
  // font-family: Consolas, Monaco, 'Andale Mono', monospace;
  font-family: monospace;
  direction: ltr;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;

  // Chrome does not compute the position of highlighted lines properly
  // if the line-height is not a round value
  line-height: 19px;
  // and set the font-size in order to have something meaningful for the above line-height
  font-size: 13px;

  -moz-tab-size: 2;
  -o-tab-size: 2;
  tab-size: 2;

  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none;
}

// pre[class*="language-"]::-moz-selection, pre[class*="language-"] ::-moz-selection,
// code[class*="language-"]::-moz-selection, code[class*="language-"] ::-moz-selection {
//   text-shadow: none;
//   background: @gray-lighter;
// }

// pre[class*="language-"]::selection, pre[class*="language-"] ::selection,
// code[class*="language-"]::selection, code[class*="language-"] ::selection {
//   text-shadow: none;
//   background: @gray-lighter;
// }

@media print {
  code[class*="language-"],
  pre[class*="language-"] {
    text-shadow: none;
  }
}

/* Code blocks */
pre[class*="language-"] {
  padding: 1em;
  margin: .5em 0;
  overflow: auto;
}

:not(pre) > code[class*="language-"],
pre[class*="language-"] {
  background: @gray-lighter;
}

/* Inline code */
:not(pre) > code[class*="language-"] {
  padding: .1em;
  border-radius: .3em;
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: @gray-light;
}

.token.punctuation {
  color: @gray;
}

.namespace {
  opacity: .7;
}

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.deleted {
  color: @link-color;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
  color: mix(@link-color, @gray);
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string {
  color: @gray-dark;
}

.token.atrule,
.token.attr-value,
.token.keyword {
  color: mix(@brand-primary, @gray-light);
}

.token.function {
  color: mix(@brand-success, @gray-light);
}

.token.regex,
.token.important,
.token.variable {
  color: mix(@link-color, @gray-dark);
}

.token.important,
.token.bold {
  font-weight: bold;
}
.token.italic {
  font-style: italic;
}

.token.entity {
  cursor: help;
}


/*
  Highlight line plugin
 */
pre[data-line] {
  position: relative;
  padding: 1em 0 1em 3em;
}

.line-highlight {
  position: absolute;
  left: 0;
  right: 0;
  padding: inherit 0;
  margin-top: 1em; /* Same as .prismâ€™s padding-top */

  background: hsla(24, 20%, 50%,.08);

  pointer-events: none;

  line-height: inherit;
  white-space: pre;

  &:hover {
    background: hsla(24, 20%, 50%,.2);
  }
}

.line-highlight:before,
.line-highlight[data-end]:after {
  content: attr(data-start);
  position: absolute;
  top: .4em;
  left: .6em;
  min-width: 1em;
  padding: 0 .5em;
  background-color: hsla(24, 20%, 50%,.4);
  color: hsl(24, 20%, 95%);
  font: bold 65%/1.5 sans-serif;
  text-align: center;
  vertical-align: .3em;
  border-radius: 999px;
  text-shadow: none;
  box-shadow: 0 1px white;
}

.line-highlight[data-end]:after {
  content: attr(data-end);
  top: auto;
  bottom: .4em;
}

/*
  Line numbers plugin
 */
pre.line-numbers {
  position: relative;
  padding-left: 3.8em;
  counter-reset: linenumber;
}

pre.line-numbers > code {
  position: relative;
}

.line-numbers .line-numbers-rows {
  position: absolute;
  pointer-events: none;
  top: 0;
  font-size: 100%;
  left: -3.8em;
  width: 3em; /* works for line-numbers below 1000 lines */
  letter-spacing: -1px;
  border-right: 1px solid #999;

  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;

}

.line-numbers-rows > span {
  pointer-events: none;
  display: block;
  counter-increment: linenumber;
}

.line-numbers-rows > span:before {
  content: counter(linenumber);
  color: #999;
  display: block;
  padding-right: 0.8em;
  text-align: right;
}
